var fs = require('fs');
var utils = require('utils');

exports.import = function (filename, events, config) {
	var lines = fs.readFileSync(filename, 'utf8').split('\n');
	var header = lines.shift().split('\t').map(function (field) { return field.replace(/[^a-z_]+/gi,'') });

	lines.forEach(function (line, index) {
		line = line.split('\t');
		var event = {};
		header.forEach(function (field, index) {
			event[field] = line[index];
		})

		event.chargeable_dur    = utils.parseInteger(event.chargeable_dur);
		
		event.dateStart         = utils.parseDateTime(event.start_dt + ' ' + event.start_tm);
		event.dateEnd           = event.dateStart + event.chargeable_dur;

		event.orig_LAC          = utils.parseInteger(event.orig_LAC);
		event.orig_cell_cd      = utils.parseInteger(event.orig_cell_cd);
		event.orig_cell_x       = utils.parseInteger(event.orig_cell_x);
		event.orig_cell_y       = utils.parseInteger(event.orig_cell_y);
		event.orig_cell_azimuth = utils.parseInteger(event.orig_cell_azimuth);
		
		event.term_LAC          = utils.parseInteger(event.term_LAC);
		event.term_cell_cd      = utils.parseInteger(event.term_cell_cd);
		event.term_cell_x       = utils.parseInteger(event.term_cell_x);
		event.term_cell_y       = utils.parseInteger(event.term_cell_y);
		event.term_cell_azimuth = utils.parseInteger(event.term_cell_azimuth);

		switch (event.cdr_type_cd) {
			case 'FORW':
				event.type = 'call';
				event.subtype = 'forward';
			break;

			case 'GPRSS':
			case 'GPRSST':
				event.type = 'internet';
			break;

			case 'MMSO':
			case 'MMST':
				event.type = 'message';
				event.subtype = 'MMS';
			break;

			case 'MOC':
			case 'MTC':
			case 'POC':
			case 'PTC':
				event.type = 'call';
			break;

			case 'SMMO':
			case 'SMMT':
			case 'SMMTN':
				event.type = 'message';
				event.subtype = 'SMS';
			break;

			case 'SUPS':
				event.type = 'unknown';
			break;

			default:
				console.error('Was fÃ¼r ein Service ist "'+event.cdr_type_cd+'"?');
		}

		switch (event.type) {
			case 'call':
			case 'message':
				if (event.dial_nbr == config.myNumber) {
					event.incoming = true;
				} else if (event.orig_nbr == config.myNumber) {
					event.incoming = false;
				} else {
					console.error(event);
				}
			break;
		}

		//console.log(event);

		switch (event.type) {
			case 'call':
			case 'message':
			case 'internet':
				events.push(event);
			break;
		}

		//if ()

		//console.log(event);
		//if (index > 3) process.exit();
	})
}