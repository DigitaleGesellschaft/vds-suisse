var fs = require('fs');
var utils = require('utils');

var timeInterval = 5*60; // 5 Minutes

exports.import = function (cells, vds, config) {
	var timeStart = config.timeStart;
	var timeEnd   = timeStart + config.days*86400;
	var indexStart = Math.round(timeStart / timeInterval);
	var indexEnd   = Math.round(timeEnd   / timeInterval);

	var activities = [];

	var cellLookup = {};
	cells.forEach(function (cell) {
		var id = cell.lacId*65536+cell.cellId;
		id = utils.decToHex(id, 8);
		cell.id = id;
		cellLookup[id] = cell;
	})

	vds.forEach(function (entry) {
		var i0 = Math.round((entry.timeStart - timeStart)/timeInterval);
		var i1 = Math.round((entry.timeEnd   - timeStart)/timeInterval);

		if ((i0 < 0) || (i1 >= indexEnd)) console.error('Au√üerhalb des Zeitintervalls');
		
		var cellId0 = entry.data.orig_LAC_HEX + entry.data.orig_cell_cd_HEX;
		if (entry.data.orig_LAC_HEX == '#NV') cellId0 = false;
		
		var cellId1 = entry.data.term_LAC_HEX + entry.data.term_cell_cd_HEX;
		if (!entry.data.term_LAC_HEX) cellId1 = false;
		if (!entry.data.term_cell_cd_HEX) cellId1 = false;

		if (cellId0) setCell(i0, cellId0);
		if (cellId1) setCell(i1, cellId1);
		if (cellId0 && cellId1 && (cellId0 == cellId1)) {
			for (var i = i0+1; i < i1; i++) setCell(i, cellId0)
		}
	})

	function setCell(index, cellId) {
		if (!cellLookup[cellId]) console.error('not found "'+cellId+'"');
		if (activities[index] === undefined) {
			var time = index*timeInterval + timeStart;
			activities[index] = {
				index: index,
				time: time,
				debug: (new Date(time*1000)).toString(),
				cells: {}
			}
		}
		activities[index].cells[cellId] = true;
	}

	activities = activities.filter(function (position) {
		return position;
	})

	activities.forEach(function (position) {
		position.cells = Object.keys(position.cells).map(function (id) { return cellLookup[id] })
	})

	return {activities:activities};
}

